<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical" width="470" height="600" horizontalAlign="center" title="Edit Event" creationComplete="init()" xmlns:importer="org.ishafoundation.archives.transcript.components.studio.importer.*">
	<mx:Script>
	<![CDATA[
		import org.ishafoundation.archives.transcript.db.XMLRetrieverStorer;
		import org.ishafoundation.archives.transcript.db.DatabaseManager;
		import mx.events.FlexEvent;
		import org.ishafoundation.archives.transcript.db.XQueryExecutor;
		import org.ishafoundation.archives.transcript.model.ReferenceManager;
		import org.ishafoundation.archives.transcript.db.DatabaseConstants;
		import org.ishafoundation.archives.transcript.importer.MSWordImporter;
		import mx.core.Container;
		import org.ishafoundation.archives.transcript.db.XMLStorer;
		import org.ishafoundation.archives.transcript.model.EventProperties;
		import mx.events.PropertyChangeEvent;
		import mx.binding.utils.ChangeWatcher;
		import org.ishafoundation.archives.transcript.model.SessionProperties;
		import org.ishafoundation.archives.transcript.fs.EventFile;
		import org.ishafoundation.archives.transcript.fs.DbFileSystem;
		import org.ishafoundation.archives.transcript.fs.File;
		import org.ishafoundation.archives.transcript.fs.Collection;
		import name.carter.mark.flex.util.XMLUtils;
		import name.carter.mark.flex.util.Utils;
		import mx.managers.CursorManager;
		import name.carter.mark.flex.util.Utils;
		import mx.utils.StringUtil;
		import name.carter.mark.flex.util.collection.HashSet;
		import name.carter.mark.flex.util.collection.ISet;
		import org.ishafoundation.archives.transcript.util.IdUtils;
		import mx.formatters.DateFormatter;
		import mx.collections.ArrayCollection;
		import mx.formatters.DateBase;
		import mx.controls.TextInput;
		import mx.controls.Alert;
		import mx.managers.PopUpManager;
		
	   	public static const EVENT_EDITED:String = "EVENT_EDITED";
	   	
	   	public var xmlRetrieverStorer:XMLRetrieverStorer;
	   	
	   	[Bindable]
	   	public var referenceMgr:ReferenceManager;
	   	
		public var eventFile:EventFile;
	
		public static function display(parent:DisplayObject, fileSystem:DbFileSystem, xmlRetrieverStorer:XMLRetrieverStorer, referenceMgr:ReferenceManager, eventFile:EventFile):EventEditDialog {
			var result:EventEditDialog = new EventEditDialog();
			result.xmlRetrieverStorer = xmlRetrieverStorer;
			result.referenceMgr = referenceMgr;
			result.eventFile = eventFile;
			PopUpManager.addPopUp(result, parent, true);
			result.eventPropertiesPane.eventTypeComboBox.enabled = false;
			result.eventPropertiesPane.collectionChooserGridRow.visible = false;
			result.eventPropertiesPane.collectionChooserGridRow.includeInLayout = false;
			result.eventPropertiesPane.fileSystem = fileSystem;
			result.addEventListener(FlexEvent.CREATION_COMPLETE, function(evt:FlexEvent):void {
				xmlRetrieverStorer.retrieveXML(eventFile.path, function(eventXML:XML):void {
					var eventProps:EventProperties = new EventProperties(eventXML);
					result.eventPropertiesPane.eventProps = eventProps;
				}, function(msg:String):void {
					Alert.show(msg, "Could not retrieve event XML");
				});
			});
			return result;
		}
	
		private function init():void {
		}
		
		private function get eventProps():EventProperties {
			return eventPropertiesPane.eventProps;
		}
		
		private function editEvent(evt:MouseEvent):void {
			// need to create the new event file
			xmlRetrieverStorer.storeXML(eventFile.path, eventProps.eventElement, function():void {
				closeMe();
				var evt:Event = new Event(EVENT_EDITED);
				dispatchEvent(evt);
			}, function (msg:String):void {
				throw new Error("Could not store event file '" + eventFile.path + "': " + msg);
			});
		}
			
		private function okClicked(evt:MouseEvent):void {
			editEvent(evt);
		}
		
		private function closeMe():void {
			PopUpManager.removePopUp(this);
		}
	]]>
	</mx:Script>
	
	<importer:EventPropertiesPane id="eventPropertiesPane" label="Event Properties" width="100%" height="100%" referenceMgr="{referenceMgr}"/>
	<mx:HBox id="buttonBox">
		<mx:Button label="OK" enabled="{eventPropertiesPane.ready}" click="okClicked(event)" />
		<mx:Button label="Cancel" click="closeMe()"/>
	</mx:HBox>
	
</mx:TitleWindow>
