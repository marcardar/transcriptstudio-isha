<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical" width="470" height="600" horizontalAlign="center" title="Import Transcripts">
	<mx:Script>
	<![CDATA[
		import mx.managers.CursorManager;
		import org.ishafoundation.archives.transcript.importer.MSWordImporter;
		import mx.events.FlexEvent;
		import org.ishafoundation.archives.transcript.db.XQueryExecutor;
		import mx.controls.Alert;
		import mx.managers.PopUpManager;
		
		public static const FILES_IMPORTED:String = "FILES_IMPORTED";
		
		public var selectedPaths:Array;
	   	public var selectedAudioTranscripts:Array;
	   	
		private var importer:MSWordImporter;
			   	
		public static function display(parent:DisplayObject, xqueryExecutor:XQueryExecutor):ExternalTranscriptsSelectorDialog {
			var result:ExternalTranscriptsSelectorDialog = new ExternalTranscriptsSelectorDialog();
			result.importer = new MSWordImporter(xqueryExecutor);		
			PopUpManager.addPopUp(result, parent, true);
			result.addEventListener(FlexEvent.CREATION_COMPLETE, function(evt:FlexEvent):void {
				xqueryExecutor.query("import module namespace ts4isha='http://ishafoundation.org/ts4isha/xquery' at 'java:org.ishafoundation.ts4isha.xquery.modules.TranscriptStudioModule';ts4isha:import-file-name-list()", [], function(xml:XML):void {
					var names:Array = [];
					var nameAttrs:XMLList = xml.*.*.@name;
					for each (var name:String in nameAttrs) {
						names.push(name);
					}
					names.sort();
					result.importFilesList.dataProvider = names;
				}, function (msg:String):void {
					Alert.show(msg, "Could not read import files listing");
					result.closeMe();
				});
			});
			return result;
		}
	
		private function okClicked(evt:Event):void {
			CursorManager.setBusyCursor();
			enabled = false;
			selectedPaths = [];
			for each (var name:String in importFilesList.selectedItems.reverse()) {
				selectedPaths.push(name);
			}
			selectedPaths.sort();
			importer.importAudioTranscripts(selectedPaths, function(audioTranscripts:Array):void {
				CursorManager.removeBusyCursor();
				enabled = true;
				selectedAudioTranscripts = audioTranscripts;
				dispatchEvent(new Event(FILES_IMPORTED));
				closeMe();
			}, function (msg:String):void {
				CursorManager.removeBusyCursor();
				enabled = true;
				Alert.show("Import failed: " + msg);
			});			
		}
		
		private function doubleClickHandler(evt:MouseEvent):void {
			if (importFilesList.selectedItem != null) {
				okClicked(evt);
			}
		}
		
		private function closeMe():void {
			PopUpManager.removePopUp(this);
		}
	]]>
	</mx:Script>
	
	<mx:List id="importFilesList" width="100%" height="100%" allowMultipleSelection="true" doubleClickEnabled="true" doubleClick="doubleClickHandler(event)"/>
	<mx:HBox id="buttonBox">
		<mx:Button id="okButton" label="OK" click="okClicked(event)" />
		<mx:Button label="Cancel" click="closeMe()"/>
	</mx:HBox>
	
</mx:TitleWindow>
