#summary Describes the XML data model used

There are three xml schemas used in the data model:
  * event.xml
  * session.xml
  * reference.xml

=== Event.xml ===
The event.xml file contains metadata pertaining to individual events that happen, and for which the Archives is storing audio/video/image data. It consists of an *event* document element with a single *metadata* child element

=== Session.xml ===
The session.xml is the main type of file stored in the database. A 'session' is defined as a continuous period of time for which recording has happened - normally lasting around 2 hours. For example, in residential programs Sadhguru may have a morning session and an evening session, each day for 5 days. One or more sessions correspond to an event. (In the last example the event would have 10 sessions).

The session.xml file document element is *session*. It contains three child elements: 
  * metadata
  * mediaMetadata
  * transcript

*metadata* stores information specific to the session - (analogous) to the *metadata* element in the event.xml file.

*mediaMetadata* stores information about the digital media files (video/audio/image) that were recorded during the session

*transcript* stores the full transcription of the session (including elements generated by users categorizations)

=== Reference.xml ===
The reference.xml file is a globally referenced file which contains the definitions of most of the elements used in the session files. e.g. categories, concepts, devices...

=== The Transcript element ===
The transcript element initially contains a sequence of *segment* elements. Each segment corresponds to a paragraph in a document. One or more consecutive segments can be wrapped in a *superSegment* element. (Generally each superSegment corresponds to a topic within the document - but they can be used more generally). superSegment elements can also be nested.

Segment elements can contain any number of *content* elements. (A content element corresponds to one or more consecutive words within a paragraph). (We sometimes use content elements for capturing information such as emphasized words, or words spoken in Tamil). One or more consecutive content elements can be wrapped in a *superContent* element. (superContent elements correspond to regions of text, within a paragraph, that have been identified for some reason e.g. a quotation). superContent elements can also be nested.

We distinguish between *factual* metadata (e.g. words spoken in Tamil, emphasized words), and *subjective* metadata (e.g. topics, good quotations), and we use superSegments and superContents in the latter case - (which one depends on whether the text spans multiple segments or is fully contained within a single segment). 

=== Tag elements ===

When we want to categorize a span of text - thereby creating a superSegment or superContent element, we also create some additional *tag* elements which define what kind of categorization has been applied. tag elements are children of superSegment or superContent elements. All tag elements have a *type* attribute, and a *value* attribute. The type attribute can be one of the following:

  * markupType
  * markupCategory
  * concept

For tags of type markupType and markupCategory the value attribute contains a reference to an element in the reference.xml file. For tags of type concept, the value attribute does not reference anything else - it simply contains the text input by the user. (We call these "additional concepts" - see later)

=== Concepts and Categories ===