<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical" width="470" height="600" horizontalAlign="center" title="Create Event" creationComplete="init()" xmlns:metadata="org.ishafoundation.archives.transcript.components.studio.metadata.*">
	<mx:Script>
	<![CDATA[
		import org.ishafoundation.archives.transcript.db.DatabaseManager;
		import mx.events.FlexEvent;
		import org.ishafoundation.archives.transcript.db.XQueryExecutor;
		import org.ishafoundation.archives.transcript.model.ReferenceManager;
		import org.ishafoundation.archives.transcript.db.DatabaseConstants;
		import org.ishafoundation.archives.transcript.importer.MSWordImporter;
		import mx.core.Container;
		import org.ishafoundation.archives.transcript.db.XMLStorer;
		import org.ishafoundation.archives.transcript.model.EventProperties;
		import mx.events.PropertyChangeEvent;
		import mx.binding.utils.ChangeWatcher;
		import org.ishafoundation.archives.transcript.model.SessionProperties;
		import name.carter.mark.flex.util.XMLUtils;
		import name.carter.mark.flex.util.Utils;
		import mx.managers.CursorManager;
		import name.carter.mark.flex.util.Utils;
		import mx.utils.StringUtil;
		import name.carter.mark.flex.util.collection.HashSet;
		import name.carter.mark.flex.util.collection.ISet;
		import mx.formatters.DateFormatter;
		import mx.collections.ArrayCollection;
		import mx.formatters.DateBase;
		import mx.controls.TextInput;
		import mx.controls.Alert;
		import mx.managers.PopUpManager;
		
	   	public static const EVENT_CREATED:String = "EVENT_CREATED";
	   	
	   	public var databaseMgr:DatabaseManager;
	   	
	   	[Bindable]
	   	public var referenceMgr:ReferenceManager;
	   	
		public static function display(parent:DisplayObject, databaseMgr:DatabaseManager, referenceMgr:ReferenceManager, eventProps:EventProperties = null):EventPropertiesCreateDialog {
			var result:EventPropertiesCreateDialog = new EventPropertiesCreateDialog();
			result.databaseMgr = databaseMgr;
			result.referenceMgr = referenceMgr;
			PopUpManager.addPopUp(result, parent, true);
			result.addEventListener(FlexEvent.CREATION_COMPLETE, function(evt:FlexEvent):void {
				result.eventPropertiesPane.eventProps = eventProps;
			});
			return result;
		}
	
		private function init():void {
		}
		
		private function get eventProps():EventProperties {
			return eventPropertiesPane.eventProps;
		}
		
		private function get8DigitDate():String {
			if (eventProps.startAt == null) {
				return null;
			}
			var startAtDate:Date = eventProps.startAt;
			var fixWidth:Function = EventPropertiesPane.fixWidth;
			var result:String = startAtDate.fullYear + fixWidth(startAtDate.month + 1, 2) + fixWidth(startAtDate.date, 2);
			return result;
		}
		
		private function createEvent(evt:MouseEvent):void {
			// need to create the new event file
			databaseMgr.storeXML(eventPropertiesPane.eventProps.eventElement, function(eventId:String):void {
				eventProps.id = eventId;
				closeMe();
				var evt:Event = new Event(EVENT_CREATED);
				dispatchEvent(evt);
			}, function (msg:String):void {
				if (msg == null || StringUtil.trim(msg).length == 0) {
					msg = "Ensure that the event-type collection has been created"; 
				}
				Alert.show(msg, "Could not save event");
			});
		}
		
		private function okClicked(evt:MouseEvent):void {
			createEvent(evt);
		}
		
		private function closeMe():void {
			PopUpManager.removePopUp(this);
		}
	]]>
	</mx:Script>
	
	<metadata:EventPropertiesPane id="eventPropertiesPane" label="Event Properties" width="100%" height="100%" referenceMgr="{referenceMgr}"/>
	<mx:HBox id="buttonBox">
		<mx:Button label="OK" enabled="{eventPropertiesPane.ready}" click="okClicked(event)" />
		<mx:Button label="Cancel" click="closeMe()"/>
	</mx:HBox>
	
</mx:TitleWindow>
