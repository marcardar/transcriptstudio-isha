<?xml version="1.0" encoding="utf-8"?>
<mx:TextInput xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="init()" xmlns:generic="org.ishafoundation.archives.transcript.components.generic.*">
	<mx:Script>
	<![CDATA[
		import mx.binding.utils.BindingUtils;
		import mx.events.PropertyChangeEvent;
		import mx.binding.utils.ChangeWatcher;
		import mx.controls.Alert;
		import org.ishafoundation.archives.transcript.model.ReferenceManager;
	
		private var lastTypedText:String = "";
	
		private function init():void {
			addEventListener(Event.CHANGE, function(evt:Event):void {
				lastTypedText = text;
			});
			var thisTextInput:TextInput = this;
			addEventListener(KeyboardEvent.KEY_DOWN, function(evt:KeyboardEvent):void {
				if (evt.charCode == Keyboard.ENTER) {
					callLater(function():void {
						autoCompleteMgr.display(false, thisTextInput);
					}); 
				}
			});
		}
		
		public function itemSelectedFunction(itemText:String, textInput:TextInput):void {
			if (this != textInput) {
				throw new Error("textInput is not the same as this component");
			}
			if (itemText == null) {
				text = lastTypedText;
				return;
			}
			// get the last word of the input text
			var spaceIndex:int = lastTypedText.lastIndexOf(" ");
			if (spaceIndex < 0) {
				// there is no space so just overwrite what we have
				text = itemText;
				return;
			}
			var lastWord:String = spaceIndex < 0 ? lastTypedText : lastTypedText.substring(spaceIndex + 1);
			if (lastWord.length == 0) {
				// this is where there is trailing space at the end of the text
				// - but then we should not have a autocomplete trigger
				// - something wrong, so just keep the text as it was
				return;
			}
			
			text = lastTypedText.substring(0, spaceIndex) + " " + itemText;
		};

		private function conceptFilterFunc(element:*, text:String):Boolean   
		{  
			// get the last word of the input text
			var spaceIndex:int = text.lastIndexOf(" ");
			
			var lastWord:String = spaceIndex < 0 ? text : text.substring(spaceIndex + 1);
			
			if (lastWord.length == 0) {
				// no last word
				return false;
			}
			
			return (element as String).indexOf(lastWord) == 0;
		}
		
	]]>
	</mx:Script>
	<generic:AutoCompleteManager
		id="autoCompleteMgr"
		target="{this}"
		dataProvider="{ReferenceManager.ALL_CONCEPTS}"
		maxRowCount="10"
		itemSelectedFunction="{itemSelectedFunction}"
		filterFunction="{conceptFilterFunc}"
		minCharsForCompletion="1"/>
	
</mx:TextInput>
