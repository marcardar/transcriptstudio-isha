<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="creationCompleteHandler()" paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="10" xmlns:collection="org.ishafoundation.archives.transcript.components.studio.collection.*">
	<mx:Script>
	<![CDATA[
		import org.ishafoundation.archives.transcript.model.ReferenceManager;
		import org.ishafoundation.archives.transcript.db.DatabaseConstants;
		import org.ishafoundation.archives.transcript.model.EventMetadata;
		import name.carter.mark.flex.util.collection.ISet;
		import mx.utils.StringUtil;
		import mx.formatters.DateBase;
		import name.carter.mark.flex.util.Utils;
		import name.carter.mark.flex.util.XMLUtils;
		import mx.collections.ArrayCollection;
		
		private static const UNKNOWN_LABEL:String = "Unknown";  

		[Bindable]
		public var referenceMgr:ReferenceManager;

		[Bindable]
		private var _eventMetadata:EventMetadata;

		private function creationCompleteHandler():void {
			eventLanguageComboBox.dataProvider = referenceMgr.getLanguages();
			eventTypeComboBox.dataProvider = referenceMgr.getEventTypes();
			eventCountryComboBox.dataProvider = referenceMgr.getCountries();
			eventCountryComboBox.selectedIndex = -1;
		}
		
		[Bindable]
		public function get eventMetadata():EventMetadata {
			return _eventMetadata;
		}
		
		public function set eventMetadata(newEventMetadata:EventMetadata):void {
			if (newEventMetadata === _eventMetadata) {
				return;
			}
			_eventMetadata = newEventMetadata;
			eventSubTitleTextInput.text = _eventMetadata.subTitle;
			eventTypeComboBox.selectedItem = _eventMetadata.type;
			startAtDateField.selectedDate = _eventMetadata.startAt; 
			endAtDateField.selectedDate = _eventMetadata.endAt;
			eventCountryComboBox.text = _eventMetadata.country; 
			eventLocationComboBox.text = _eventMetadata.location; 
			eventVenueComboBox.text = _eventMetadata.venue; 
			eventLanguageComboBox.selectedItem = _eventMetadata.language;
			notesTextArea.text = _eventMetadata.notes;
		}

		public static function getArrayCollectionSequence(first:int, last:int, width:int, includeUnknown:Boolean):ArrayCollection {
			var arr:Array = new Array();
			for (var i:int = Math.min(first, last); i <= Math.max(first, last); i++) {
				arr.push(fixWidth(i, width));
			}
			if (first > last) {
				arr.reverse();
			}
			if (includeUnknown) {
				arr.unshift(UNKNOWN_LABEL);
			}
			return new ArrayCollection(arr);
		}

		private function countryChangeHandler():void {
			eventMetadata.country = eventCountryComboBox.text;
			eventLocationComboBox.dataProvider = referenceMgr.getLocations(eventCountryComboBox.text);
			eventLocationComboBox.selectedIndex = -1;
		}

		private function locationChangeHandler():void {
			eventMetadata.location = eventLocationComboBox.text;
			var oldText:String = eventVenueComboBox.text;
			eventVenueComboBox.dataProvider = referenceMgr.getVenues(eventCountryComboBox.text, eventLocationComboBox.text);
			eventVenueComboBox.selectedIndex = -1;
			callLater(function():void {
				eventVenueComboBox.text = oldText;
			});
		}

		private static function fixWidthForComboBox(comboBox:ComboBox, width:int):String {
			var result:String;
			if (comboBox.selectedItem == null) {
				var text:String = StringUtil.trim(comboBox.text.toLowerCase());
				result = fixWidth(text, width); 
				// update text since not one of predefined
				comboBox.text = result;				
			}
			else {
				result = comboBox.selectedItem.toString();
			}
			return result;
		}
		
		public static function fixWidth(s:Object, width:int):String {
			var result:String = s.toString();
			if (width < 0) {
				return result;
			}
			if (result.length > width) {
				return result.substring(result.length - width);
			}
			while (result.length < width) {
				result = "0" + result;
			} 
			return result;
		}
		
	]]>
	</mx:Script>
	<mx:Boolean id="ready">{eventTypeComboBox.selectedItem != null}</mx:Boolean>
	<mx:Grid width="100%" height="100%">
		<mx:GridRow width="100%">
			<mx:GridItem height="100%" horizontalAlign="right" verticalAlign="middle">
				<mx:Label text="Event Type"/>
			</mx:GridItem>
			<mx:GridItem width="100%" height="100%" verticalAlign="middle">
				<mx:ComboBox id="eventTypeComboBox" width="100" textAlign="center" change="{eventMetadata.type = eventTypeComboBox.selectedItem as String}"/>
			</mx:GridItem>
		</mx:GridRow>
		<mx:GridRow width="100%">
			<mx:GridItem height="100%" horizontalAlign="right" verticalAlign="middle">
				<mx:Label text="Event Title"/>
			</mx:GridItem>
			<mx:GridItem width="100%" height="100%" verticalAlign="middle">
				<mx:Label id="eventTitleLabel" width="100%" text="{referenceMgr.getEventTypeName(eventTypeComboBox.value.toString())}"/>
			</mx:GridItem>
		</mx:GridRow>
		<mx:GridRow width="100%">
			<mx:GridItem height="100%" horizontalAlign="right" verticalAlign="middle">
				<mx:Label text="Event Sub Title"/>
			</mx:GridItem>
			<mx:GridItem width="100%" height="100%" verticalAlign="middle">
				<mx:TextInput width="100%" id="eventSubTitleTextInput" restrict="a-zA-Z0-9\ " change="{eventMetadata.subTitle = eventSubTitleTextInput.text}"/>
			</mx:GridItem>
		</mx:GridRow>
		<mx:GridRow width="100%">
			<mx:GridItem height="100%" horizontalAlign="right" verticalAlign="middle">
				<mx:Label text="Event Start Date"/>
			</mx:GridItem>
			<mx:GridItem width="100%" height="100%" verticalAlign="middle">
				<mx:DateField id="startAtDateField" formatString="DD/MM/YYYY" change="{eventMetadata.startAt = startAtDateField.selectedDate}" selectableRange="{endAtDateField.selectedDate == null ? null : {rangeEnd : endAtDateField.selectedDate}}"/>
			</mx:GridItem>
		</mx:GridRow>
		<mx:GridRow width="100%">
			<mx:GridItem height="100%" horizontalAlign="right" verticalAlign="middle">
				<mx:Label text="Event End Date"/>
			</mx:GridItem>
			<mx:GridItem width="100%" height="100%" verticalAlign="middle">
				<mx:DateField id="endAtDateField" formatString="DD/MM/YYYY" change="{eventMetadata.endAt = endAtDateField.selectedDate}" selectableRange="{(startAtDateField.selectedDate == null) ? null : {rangeStart : startAtDateField.selectedDate}}"/>
			</mx:GridItem>
		</mx:GridRow>
		<mx:GridRow width="100%">
			<mx:GridItem height="100%" horizontalAlign="right" verticalAlign="middle">
				<mx:Label text="Country"/>
			</mx:GridItem>
			<mx:GridItem width="100%" height="100%" verticalAlign="middle">
				<mx:ComboBox minWidth="200" id="eventCountryComboBox" editable="true" restrict="a-zA-Z0-9\ " change="countryChangeHandler()"/>
			</mx:GridItem>
		</mx:GridRow>
		<mx:GridRow width="100%">
			<mx:GridItem height="100%" horizontalAlign="right" verticalAlign="middle">
				<mx:Label text="Location"/>
			</mx:GridItem>
			<mx:GridItem width="100%" height="100%" verticalAlign="middle">
				<mx:ComboBox minWidth="200" id="eventLocationComboBox" editable="true" restrict="a-zA-Z0-9\ " change="locationChangeHandler()"/>
			</mx:GridItem>
		</mx:GridRow>
		<mx:GridRow width="100%">
			<mx:GridItem height="100%" horizontalAlign="right" verticalAlign="middle">
				<mx:Label text="Venue"/>
			</mx:GridItem>
			<mx:GridItem width="100%" height="100%" verticalAlign="middle">
				<mx:ComboBox width="100%" id="eventVenueComboBox" editable="true" restrict="a-zA-Z0-9\ " change="{eventMetadata.venue = eventVenueComboBox.text}"/>
			</mx:GridItem>
		</mx:GridRow>
		<mx:GridRow width="100%">
			<mx:GridItem height="100%" horizontalAlign="right" verticalAlign="middle">
				<mx:Label text="Language"/>
			</mx:GridItem>
			<mx:GridItem width="100%" height="100%" verticalAlign="middle">
				<mx:ComboBox id="eventLanguageComboBox" width="100" textAlign="center" change="{eventMetadata.language = eventLanguageComboBox.selectedItem as String}"/>
			</mx:GridItem>
		</mx:GridRow>
		<mx:GridRow width="100%" height="100%">
			<mx:GridItem height="100%" horizontalAlign="right" verticalAlign="top" paddingTop="2">
				<mx:Label text="Notes"/>
			</mx:GridItem>
			<mx:GridItem width="100%" height="100%" verticalAlign="middle">
				<mx:TextArea id="notesTextArea" width="100%" height="100%" change="{eventMetadata.notes = notesTextArea.text}"/>
			</mx:GridItem>
		</mx:GridRow>
	</mx:Grid>
</mx:VBox>
