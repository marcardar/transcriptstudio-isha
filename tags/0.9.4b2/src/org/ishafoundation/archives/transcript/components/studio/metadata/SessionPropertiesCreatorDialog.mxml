<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical" width="470" height="600" horizontalAlign="center" title="Create Session" xmlns:metadata="org.ishafoundation.archives.transcript.components.studio.metadata.*">
	<mx:Script>
	<![CDATA[
		import org.ishafoundation.archives.transcript.model.SessionProperties;
		import org.ishafoundation.archives.transcript.db.XMLStorer;
		import org.ishafoundation.archives.transcript.db.XQueryExecutor;
		import mx.events.FlexEvent;
		import org.ishafoundation.archives.transcript.model.ReferenceManager;
		import org.ishafoundation.archives.transcript.model.EventProperties;
		import org.ishafoundation.archives.transcript.db.DatabaseManager;
		import mx.controls.Alert;
		import mx.managers.PopUpManager;
		
		public static const SESSION_EDITED:String = "SESSION_EDITED";
		
		private var xmlStorer:XMLStorer;
		
		public static function display(parent:DisplayObject, xmlStorer:XMLStorer, referenceMgr:ReferenceManager, eventProps:EventProperties = null, sessionProps:SessionProperties = null):SessionPropertiesCreatorDialog {
			if (sessionProps == null) {
				sessionProps = new SessionProperties(<session eventId="{eventProps.id}"/>);
			}
			var result:SessionPropertiesCreatorDialog = new SessionPropertiesCreatorDialog();
			result.xmlStorer = xmlStorer;
			PopUpManager.addPopUp(result, parent, true);
			result.sessionPropertiesPane.addEventListener(FlexEvent.CREATION_COMPLETE, function(evt:FlexEvent):void {
				result.sessionPropertiesPane.referenceMgr = referenceMgr;
				result.sessionPropertiesPane.sessionProps = sessionProps;
				result.sessionPropertiesPane.sessionProps.eventId = eventProps.id;
			}, true);
			return result;
		}
	
		public function get sessionProps():SessionProperties {
			return sessionPropertiesPane.sessionProps;
		}
		
		private function okClicked():void {
			xmlStorer.storeXML(sessionProps.sessionElement, function(sessionId:String):void {
				sessionProps.id = sessionId;
				closeMe();
				dispatchEvent(new Event(SESSION_EDITED));
			}, function (msg:String):void {
				throw new Error("Could not store session file '" + sessionProps.path + "': " + msg);
			});
		}
		
		public function closeMe():void {
			PopUpManager.removePopUp(this);
		}
	]]>
	</mx:Script>
	
	<metadata:SessionPropertiesPane id="sessionPropertiesPane" width="100%" height="100%"/>
	<mx:HBox id="buttonBox">
		<mx:Button id="okButton" label="OK" enabled="{sessionPropertiesPane.ready}" click="okClicked()"/>
		<mx:Button label="Cancel" click="closeMe()"/>
	</mx:HBox>
	
</mx:TitleWindow>
